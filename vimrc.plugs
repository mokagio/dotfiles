"
" Vim-Plug plugins list
" https://github.com/junegunn/vim-plug
"
" This is just the plugins list. It needs to be sourced in between the plug
" begin and end calls.
"

" Explore filesystem and open files and directories
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
" Show git info in NerdTree
Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': 'NERDTreeToggle' }

" Nice and colored status/tabline
Plug 'bling/vim-airline'

" ctrlp is a fuzzy file finder and opener
Plug 'kien/ctrlp.vim'

" Incremental autocompletion
Plug 'neoclide/coc.nvim', {'branch': 'release'}
" This neocomplete/deoplete autocompletion is disabled to avoid clashes with
" coc. I don't actually know whether they clash, but I've been experiencing
" weird messages while typing at times, so trying to clean things up.
"
" Autocompletion cache
" Plug 'Shougo/neocomplete.vim'
" Autocompletion: Neovim version
"Plug 'Shougo/deoplete.nvim'

" Commands for common file operation like rename, delete, create directory,
" `chmod`, etc
Plug 'tpope/vim-eunuch'
" Git integration and more
Plug 'tpope/vim-fugitive'
" GitHub extensions for fugitive
Plug 'tpope/vim-rhubarb'
" Show Git status on the gutter
Plug 'airblade/vim-gitgutter'

" Automatically add closing braket
Plug 'jiangmiao/auto-pairs'

" A plugin to make text alignement easier
Plug 'godlygeek/tabular'

" A plugin to add, edit, and delete surroundings symbols to text
Plug 'tpope/vim-surround'

" Read editor configurations from .editorconfig
" http://editorconfig.org/
Plug 'editorconfig/editorconfig-vim'

" Syntax checks
Plug 'vim-syntastic/syntastic'

" Comment code
Plug 'tpope/vim-commentary'

" Languages plugins
Plug 'jparise/vim-graphql'
Plug 'cfdrake/vim-carthage'
Plug 'tpope/vim-cucumber'
Plug 'digitaltoad/vim-jade'
Plug 'keith/swift.vim'
" Rudimental support for Swift autocompletion
Plug 'keith/sourcekittendaemon.vim'
" Run xcodebuild tasks from within vim
Plug 'gfontenot/vim-xcode', { 'branch': 'main' }
" Syntax highlighting for the Xcode .pbxproj file
Plug 'cfdrake/vim-pbxproj'
" Syntax highlighting for Xcode .xcconfig files
Plug 'keith/xcconfig.vim'
" Syntax highlighting for PropertyList (.plist) files
Plug 'darfink/vim-plist'
Plug 'elzr/vim-json'
" Ruby
Plug 'vim-ruby/vim-ruby'
" Run rspec tests via leader commands
Plug 'thoughtbot/vim-rspec', { 'for': 'ruby' }
" JS and JSX (React)
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
" TypeScript and TSX (React)
Plug 'leafgarland/typescript-vim'
Plug 'ianks/vim-tsx'
" Elm
Plug 'elmcast/elm-vim'
" Toml
Plug 'cespare/vim-toml', { 'branch': 'main' }
" Kotlin
Plug 'udalov/kotlin-vim'
" Starlark (Bazel's config language)
Plug 'cappyzawa/starlark.vim'
" CSV
Plug 'chrisbra/csv.vim'

" Keyboard shortcuts to run tests, supports different languages with the same
" combos
Plug 'janko/vim-test'

" Helps to end certain structures automatically.
" For example, in Ruby this means adding end after `if`, `do`, `def`, and
" others.
Plug 'tpope/vim-endwise'
" Same as endwise, but for (X)HTML tags
Plug 'alvan/vim-closetag'

" HTML editing powerups
Plug 'mattn/emmet-vim'

" Markdown & Writing
Plug 'plasticboy/vim-markdown'
Plug 'jkramer/vim-checkbox'
Plug 'madzak/vim-proselint'
Plug 'junegunn/goyo.vim' " for full sceen writing
" Markdown Preview sometimes gives issues.
" It installs fine but then show "Node vX.Y.Z" when asked to run.
" Changing the install mode sometimes works.
"
" See https://github.com/iamcco/markdown-preview.nvim/issues/50
" Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}
" Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & npm install'  }
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install'  }
Plug 'junegunn/limelight.vim'

" Zettletasken (https://zettelkasten.de/)
" (note taking powerups for building lasting knowledge)
Plug 'vimwiki/vimwiki'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'michal-h21/vim-zettel'
" This syncs VimWiki to Git â€“ Not working right now :/
Plug 'michal-h21/vimwiki-sync'
" This allows to search through notes and open the match without having to
" create a link in the current note
Plug 'alok/notational-fzf-vim'
" Improved tags search
Plug 'matt-snider/vim-tagquery', { 'do': 'bash install.sh' }

" A collection of colorschemes
Plug 'flazz/vim-colorschemes'
" Another theme, as if the collection above wasn't enough, LOL
Plug 'sonph/onehalf', { 'rtp': 'vim' }
Plug 'arcticicestudio/nord-vim', { 'branch': 'main' }
Plug 'ayu-theme/ayu-vim'
let ayucolor="light"

" Show invisible characters
Plug 'vim-scripts/cream-showinvisibles'

" Shows a sidebar with named registers and their contect
Plug 'junegunn/vim-peekaboo'

" Add words to a project-specific spellfile with zG and zW
"
" I find this better than having a vanilla Vim project-specific spellfile, as
" described here
" https://thoughtbot.com/blog/opt-in-project-specific-vim-spell-checking-and-word-completion,
" because that option saves all words in the project-specific file and doesn't
" access the ones you already saved in the global one, meaning there's a lot
" of work I'd have to do to readd all my words. True, I could simply copy them
" at the start of each project, a one time cost. Call me lazy.
Plug 'dbmrq/vim-dialect'
