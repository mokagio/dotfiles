#!/usr/bin/env ruby

# frozen_string_literal: true

# Get the Git log clip with the commits to cherry-pick from the pasteboard.
require 'English'
git_log_input = `pbpaste`

# Extract the commit SHAs from the input.
#
# Expected format from the custom git log output:
#
# * b633fd0 - ...
# * 9ea54f4 - ...
# * ...
commits = git_log_input.lines.map { |l| l.split(' ')[1] }

# When cherry-picking, we need to start from the _oldest_ commit
commits = commits.reverse

def recursive_cherry_pick(commits, done_count, total_count)
  if commits.empty?
    puts 'All done ✅'
    exit 0
  end

  commit = commits.first
  suffix = "#{commit} (#{done_count + 1} of #{total_count})"
  puts "🍒 Cherry picking #{commit}"

  system("git cherry-pick #{commit}")

  if $CHILD_STATUS.exitstatus != 0
    puts "😟 cherry picking failed for #{suffix}"
    puts "Once you fix it, use the following output (already in your pasteboard) and run the script again to continue the process:\n"
    output = commits[1..].reverse.map { |c| "* #{c}" }.join("\n")
    puts output
    # Can't calls `pbcopy` directly, becase it reads from STDIN
    IO.popen('pbcopy', 'w') { |f| f << output }
    exit 1
  else
    recursive_cherry_pick(commits[1..], done_count + 1, total_count)
  end
end

recursive_cherry_pick(commits, 0, commits.length)
